README

BRIM is a cross platform mobile web app that allows users to represent images using Braille characters.  
It was designed to aid instructors and students who are vision impaired. 
The .txt files that it generates can be used to print low-cost tactile graphics using a standard braille printer. 




To use the application, simply run a mongo server and a node server using app.js and visit localhost:8889/home.html.


The text of the converted pictures are saved in the file foo.txt.

                                                                     
                                                                     
                                                                     
                                             
Please provide details for as many sections that apply to your specific project. For sections that do not apply, simply indicate the phrase N/A. 

1. The project is on gitHub at https://github.com/sticknor/Brim.git 
   It can be downloaded to any directory with enough space for a database of images. 


2. We ran the servers for our website from Windows and Mac, but we believe it can work from any platform.  Once the servers are running, users can access the website from any browser on any platform even mobile.  Chrome and safari yield best results. 

3. Our project has one main component, the website.  All other technologies are integrated into the website.

4. You will need to install python, mongodb, and node to the machine running the servers.

5. Install the node modules express, request, mongodb and mongo-express-auth.  The python imaging library (PIL) should be already included in the python download.

6. Python can be downloaded from: "http://www.python.org/getit/"
   Node can be downloaded from: "http://nodejs.org/download/"
   Mongodb can be downloaded from: "http://www.mongodb.org/downloads"
   Use "npm install <node module>" in node shell for ("express","request","mongodb","mongo-express-auth").

7. Python, node, and mongodb should be installed in the machine's root directory, while the node modules should be installed at the root of the project directory.

8. N/A

9. N/A

10. On the machine serving up the website, run a mongo server first, and then run app.js (in the root of the project directory) from node.

11. All platforms should be capable of running the servers as long as they have the necessary libraries (listed in 4 and 5) installed. The website can be accessed from any platform with an up-to-date browser.

12. The project does not need any extra files created initially, everything (logo, background, etc.) is included in the "style" folder in the project directory.

13. Included in the project

14. They can be found in the project directory.

15. The application creates and stores image and text files on the machine runing the server.

16. The files will be written in the project directory in "uploads" and "texts" folder.

17. N/A

18. N/A

19. N/A

20. The website can be accessed from any device, but the servers can only be run on computers.

21. N/A

22. The application cannot handle large images and will reject them.  Also some image file types are not accepted, but the user is made aware of this issue.
    
23. Allow blind users (include verification method for the generated braille image, simpler user interface, etc.)
    More filters with extended options (not all pictures turn out great)
    Fix issue with large images by either telling user or allolwing large image inputs
